angular.module("angularValidator",[]),angular.module("angularValidator").directive("angularValidator",function(){return{restrict:"A",link:function(a,b){function c(a){for(var b=0;b<a.length;b++)b in a&&e(a[b])}function d(){for(;q.length;){var a=q.pop();a()}}function e(b){q.push(a.$watch(function(){return b.value+p.submitted+h(b)+i(b)+f(p[b.name])+g(p[b.name])},function(){j(b),n(b)}))}function f(a){return a&&"$dirty"in a?a.$dirty:void 0}function g(a){return a&&"$modelValue"in a?a.$modelValue:void 0}function h(a){if("validator"in a.attributes){var b=angular.element(a).scope(),c=b.$eval(a.attributes.validator.value);return p[a.name].$setValidity("angularValidator",c),c}}function i(a){if("ng-required"in a.attributes){var b=angular.element(a).scope();return b.$eval(a.attributes["ng-required"].value)}}function j(a){var b=function(){return"<i class='fa fa-times'></i> Required"},c=function(){return"<i class='fa fa-times'></i> Invalid"};if(a.name in p){var d=p[a.name],e=m(a);e&&e.remove(),p.submitted&&(d.$error.required?"required-message"in a.attributes?l(a,a.attributes["required-message"].value):l(a,b):d.$valid||("invalid-message"in a.attributes?l(a,a.attributes["invalid-message"].value):l(a,c)))}}function k(b){return"<label class='control-label has-error validationMessage'>"+a.$eval(b)+"</label>"}function l(a,b){if("validator-message-append-to"in a.attributes){var c=a.attributes["validator-message-append-to"].value;angular.element(a).closest(c).append(k(b))}else angular.element(a).after(k(b))}function m(a){var b;if("validator-message-append-to"in a.attributes){var c=a.attributes["validator-message-append-to"].value;b=angular.element(a).closest(c).children()}else b=angular.element(a).parent().children();for(var d=0;d<b.length;d++)if(angular.element(b[d]).hasClass("validationMessage"))return angular.element(b[d]);return!1}function n(a){var b=angular.element(a),c="validator-group"in a.attributes&&a.attributes["validator-group"].value,d=b.closest("."+c),e="validator-group-elements"in a.attributes&&a.attributes["validator-group-elements"].value;if(e&&!c)throw new Error('You must define "validator-group" which contains "validator-group-elements"');if(a.name in p){var f=p[a.name];if(b.parent().removeClass("has-error"),b.removeClass("has-error"),d.length&&d.removeClass("has-error"),p.submitted)if(f.$invalid)b.parent().addClass("has-error"),b.addClass("has-error"),d.length&&d.addClass("has-error");else if(e){var g=d.find(e);if(!g.length)throw new Error('Can not find elements by selector="'+e+'" in validator-group="'+c+'" ');angular.forEach(g,function(a){var b=p[a.name];if(!b)throw new Error('Can not find element with name="'+a.name+'" in validator-group="'+c+'" ');return b.$invalid?d.addClass("has-error"):void 0})}}}var o=angular.element(b)[0],p=a[o.name];p.submitted=!1;var q=[];b.on("submit",function(b){b.preventDefault(),a.$apply(function(){p.submitted=!0}),p.$valid&&a.$eval(o.attributes["angular-validator-submit"].value)});var r=a.$watch(function(){return o.length},function(){d(),c(o)});b.bind("$destroy",function(){r(),d()}),c(o)}}}),angular.module("angularValidator").provider("angularValidator",["$provide",function(a){this.decorateNgModelDirective=function(){a.decorator("ngModelDirective",["$delegate",function(a){var b=a[0],c=b.controller;return b.controller=["$scope","$element","$attrs","$injector",function(a,b,d,e){var f=e.get("$interpolate");d.$set("name",f(d.name||"")(a)),e.invoke(c,this,{$scope:a,$element:b,$attrs:d})}],a}])},this.decorateFormDirective=function(){a.decorator("formDirective",["$delegate",function(a){var b=a[0],c=b.controller;return b.controller=["$scope","$element","$attrs","$injector",function(a,b,d,e){var f=e.get("$interpolate");d.$set("name",f(d.name||d.ngForm||"")(a)),e.invoke(c,this,{$scope:a,$element:b,$attrs:d})}],a}])},this.$get=function(){return{}}}]);